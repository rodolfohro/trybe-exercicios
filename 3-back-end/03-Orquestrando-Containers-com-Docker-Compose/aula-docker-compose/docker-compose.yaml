version: '3'
services:
  frontend:
    build: frontend/    # Especificamos o contexto, ou seja, a pasta onde está o Dockerfile.
    depends_on:
      - backend
    restart: always # Sempre que o container parar, o Docker irá reiniciá-lo.
    ports:
      - "3000:3000"     # Mapeamos a porta 3000 do container para a porta 3000 da máquina. # O parâmetro é a porta do computador local e o segundo é a porta exposta no container.             
    volumes:
      - ./frontend/src:/frontend/src # Mapeamos a pasta src do frontend para dentro do container.
    networks:
      - rede-virtual-1 # Adicionamos o serviço à rede virtual 1.
  
  backend:
    build: backend/  
    restart: always
    ports:
      - "3001:3001"     # Mapeamos a porta 3001 do container para a porta 3001 da máquina
    environment:
      - DB_HOST=database # Passamos a variável de ambiente DB_HOST com o valor database, que é o nome do serviço do banco de dados.
    depends_on:
      - database
    networks:
      - rede-virtual-1 # Adicionamos o serviço à rede virtual 1.
      - rede-virtual-2 # Adicionamos o serviço à rede virtual 2.
  
  database:
    image: betrybe/docker-compose-example-database:v1    # Especificamos a Imagem Docker diretamente.
    restart: always
    networks:
      - rede-virtual-2 # Adicionamos o serviço à rede virtual 2.

volumes:
  dados-do-banco:

networks: # Criamos uma rede virtual para que os containers possam se comunicar.
  rede-virtual-1: # Nome da rede virtual.
  rede-virtual-2: # Nome da rede virtual.
